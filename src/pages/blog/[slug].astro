---
import SiteLayout from '../../layouts/SiteLayout.astro';
import Icon from "../../components/Icon.astro";
import BackNav from "../../components/BackNav.astro";
import { getCollection } from 'astro:content';
import { blogPostingJsonLd } from '../../lib/seo';
import ShareButtons from "../../components/ShareButtons.astro";
import { SITE_URL } from '../../lib/env';
import blogStyles from "../../styles/pages/blog.module.css";

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((p: any) => ({ params: { slug: p.slug } }));
}

const { slug } = Astro.params;
const entry = (await getCollection('blog')).find((e: any) => e.slug === slug);
if (!entry) {
  return Astro.redirect('/blog/');
}

const { Content } = await entry.render();
const frontmatter = entry.data;

const heroMap = import.meta.glob('../../content/blog/*/hero.{jpg,jpeg,png,webp,gif,svg}', {
  query: '?url',
  import: 'default',
  eager: true,
});
const heroFallback = Object.entries(heroMap).find(([p]) => p.startsWith(`../../content/blog/${slug}/hero.`))?.[1] as string | undefined;
const heroData = frontmatter.hero ?? heroFallback;
const heroSrc = typeof heroData === 'string' ? heroData : heroData?.src;
const heroWidth = typeof heroData === 'object' ? heroData.width : undefined;
const heroHeight = typeof heroData === 'object' ? heroData.height : undefined;
const heroAlt = frontmatter.heroAlt ?? frontmatter.title;
const canonical = `/blog/${slug}/`;
const canonicalUrl = `${SITE_URL}${canonical}`;

const jsonLd = blogPostingJsonLd({
  title: frontmatter.title,
  canonical,
  publishDate: frontmatter.publishDate,
  updatedDate: frontmatter.updatedDate,
  image: heroSrc ? [heroSrc] : undefined,
  description: frontmatter.description,
  excerpt: frontmatter.excerpt,
  tags: frontmatter.tags,
  category: frontmatter.category,
});
---

<SiteLayout 
  title={frontmatter.title} 
  canonical={canonical} 
  jsonLd={jsonLd} 
  selectedItem="blog"
  description={frontmatter.description || frontmatter.excerpt}
  image={heroSrc}
  type="article"
  publishedTime={frontmatter.publishDate}
  modifiedTime={frontmatter.updatedDate}
  tags={frontmatter.tags}
  author="Erland Ramdhani"
>
  <BackNav href="/blog/" label="Back to blog" />
  <article class="content-container blog-post">
    <header class={blogStyles['blog-post__header']}>
      {heroSrc && (
        <img src={heroSrc} width={heroWidth} height={heroHeight} alt={heroAlt} loading="eager" class="hero-image" />
      )}
      <h1 style="margin:0 0 .25rem 0;">{frontmatter.title}</h1>
      {(frontmatter.category || frontmatter.publishDate) && (
        <div class={blogStyles['blog-post__meta']}>
          {frontmatter.category && (
            <div class={blogStyles['blog-post__meta-item']}>
              <Icon name="tags" class={blogStyles['blog-post__meta-icon']} />
              <span class={blogStyles['blog-post__meta-text']}>{frontmatter.category}</span>
            </div>
          )}
          {frontmatter.publishDate && (
            <div class={blogStyles['blog-post__meta-item']}>
              <Icon name="date" class={blogStyles['blog-post__meta-icon']} />
              <time datetime={new Date(frontmatter.publishDate).toISOString()} class={blogStyles['blog-post__meta-text']}>
                {new Date(frontmatter.publishDate).toLocaleDateString('id-ID', { dateStyle: 'medium' })}
              </time>
            </div>
          )}
        </div>
      )}
    </header>
    <div class="prose">
      <Content />
    </div>
    <ShareButtons title={frontmatter.title} url={canonicalUrl} description={frontmatter.description || frontmatter.excerpt} />
  </article>
  
  
</SiteLayout>
