---
import Header from '../../components/Header.astro';
import Sidebar from '../../components/Sidebar.astro';
import Icon from "../../components/Icon.astro";
import BackNav from "../../components/BackNav.astro";
import Footer from "../../components/Footer.astro";
import { getCollection } from 'astro:content';
import { blogPostingJsonLd } from '../../lib/seo';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((p) => ({ params: { slug: p.slug } }));
}

const { slug } = Astro.params;
const entry = (await getCollection('blog')).find((e) => e.slug === slug);
if (!entry) {
  return Astro.redirect('/blog');
}

const { Content } = await entry.render();
const frontmatter = entry.data;

// Auto-detect hero image placed as: src/content/blog/[slug]/hero.(jpg|jpeg|png,webp,gif,svg)
const heroMap = import.meta.glob('../../content/blog/*/hero.{jpg,jpeg,png,webp,gif,svg}', {
  query: '?url',
  import: 'default',
  eager: true,
});
const heroFallback = Object.entries(heroMap).find(([p]) => p.startsWith(`../../content/blog/${slug}/hero.`))?.[1] as
  | string
  | undefined;
const heroData = frontmatter.hero ?? heroFallback;
const heroSrc = typeof heroData === 'string' ? heroData : heroData?.src;
const heroWidth = typeof heroData === 'object' ? heroData.width : undefined;
const heroHeight = typeof heroData === 'object' ? heroData.height : undefined;
const heroAlt = frontmatter.heroAlt ?? frontmatter.title;
const canonical = `/blog/${slug}/`;

const jsonLd = blogPostingJsonLd({
  title: frontmatter.title,
  canonical,
  publishDate: frontmatter.publishDate,
  updatedDate: frontmatter.updatedDate,
  image: heroSrc ? [heroSrc] : undefined,
});
---

<!DOCTYPE html>
<html>
  <Header title={`${frontmatter.title} | Erland`} canonical={canonical} jsonLd={jsonLd} />
  <body>
    <div class="content">
      <Sidebar selectedItem="blog" />
      <main class="main">
        <div class="container">
          <BackNav href="/blog" label="Back to blog" />
          <article class="content-container blog-post">
    <header class="blog-post__header">
      {heroSrc && (
        <img
          src={heroSrc}
          width={heroWidth}
          height={heroHeight}
          alt={heroAlt}
          loading="eager"
          class="hero-image"
        />
      )}
      <h1 style="margin:0 0 .25rem 0;">{frontmatter.title}</h1>
      {(frontmatter.category || frontmatter.publishDate) && (
        <div class="blog-post__meta">
          {frontmatter.category && (
            <div class="blog-post__meta-item">
              <Icon name="tags" class="blog-post__meta-icon" />
              <span class="blog-post__meta-text">{frontmatter.category}</span>
            </div>
          )}
          {frontmatter.publishDate && (
            <div class="blog-post__meta-item">
              <Icon name="date" class="blog-post__meta-icon" />
              <time datetime={new Date(frontmatter.publishDate).toISOString()} class="blog-post__meta-text">
                {new Date(frontmatter.publishDate).toLocaleDateString('id-ID', { dateStyle: 'medium' })}
              </time>
            </div>
          )}
        </div>
      )}
    </header>

    <div class="prose">
      <Content />
    </div>
          </article>
        </div>
        <Footer />
      </main>
    </div>
    <!--[if lte IE 9]><script src="//cdnjs.cloudflare.com/ajax/libs/placeholders/3.0.2/placeholders.min.js"></script><![endif]-->
  </body>
</html>
