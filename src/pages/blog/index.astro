---
import Header from '../../components/Header.astro';
import Sidebar from '../../components/Sidebar.astro';
import { loadAllPosts, slicePage } from '../../lib/blog';

const posts = await loadAllPosts();

// Pagination (10 posts per halaman)
const pageSize = 10;
const page = 1; // halaman pertama
const totalPages = Math.max(1, Math.ceil(posts.length / pageSize));
const paginated = slicePage(posts, page, pageSize);
const pageHref = (n: number) => (n === 1 ? `/blog/` : `/blog/page/${n}/`);
---

<!DOCTYPE html>
<html>
  <Header
    title="Blog | Erland"
    canonical="/blog/"
    nextHref={totalPages > 1 ? pageHref(2) : undefined}
    jsonLd={{
      '@context': 'https://schema.org',
      '@type': 'CollectionPage',
      name: 'Blog',
      url: '/blog/',
      isPartOf: { '@type': 'Blog', name: 'Blog', url: '/blog/' },
      itemListElement: paginated.map((p, i) => ({
        '@type': 'ListItem',
        position: i + 1,
        url: `/blog/${p.slug}/`,
        name: p.data.title,
      })),
    }}
  />
  <body>
    <div class="content">
      <Sidebar selectedItem="blog" />
      <nav class="main">
        <div class="container">
          <div class="back-nav-container">
            <a href="/" class="back-nav-button w-inline-block">
              <img src="/assets/back.svg" loading="lazy" alt="" class="back-nav-img" />
              <div>Back</div>
            </a>
          </div>

          <div class="content-container">
            <h1>Blog</h1>
            <section class="items-container">
              <div class="resouce-items">
                {paginated.map((post) => (
                  <a href={`/blog/${post.slug}/`} class="w-inline-block" style="text-decoration:none;">
                    <article class="resource-card post-card">
                      <div class="post-card__inner">
                        <div class="post-card__thumb">
                          {post.hero ? (
                            <img src={post.hero} alt={post.data.heroAlt ?? post.data.title} loading="lazy" />
                          ) : (
                            <div class="post-card__thumb--placeholder"></div>
                          )}
                        </div>
                        <div class="post-card__body">
                          <header class="post-card__header">
                            <h2 class="post-card__title">
                              {post.data.title}
                            </h2>
                            {post.date && (
                              <time datetime={post.date.toISOString()} class="post-card__date">
                                {post.date.toLocaleDateString('id-ID', { dateStyle: 'medium' })}
                              </time>
                            )}
                          </header>

                          {post.data.description && (
                            <p class="post-card__desc">{post.data.description}</p>
                          )}

                          {post.data.tags?.length > 0 && (
                            <ul class="post-card__tags">
                              {post.data.tags.map((t) => (
                                <li class="post-card__tag">{t}</li>
                              ))}
                            </ul>
                          )}
                        </div>
                      </div>
                    </article>
                  </a>
                ))}
                
                {posts.length === 0 && (
                  <p style="opacity:.8;">Belum ada tulisan. Tambahkan file di <code>src/content/blog/[slug]/index.md</code> ya ✍️</p>
                )}
              </div>
            </section>
            {posts.length > pageSize && (
              <nav aria-label="Pagination" style="display:flex; gap:.5rem; align-items:center; justify-content:center; margin-top:1rem;">
                {page > 1 && (
                  <a href={pageHref(page - 1)} style="padding:.4rem .7rem; border:1px solid var(--border, rgba(0,0,0,.08)); border-radius:8px; text-decoration:none;">Prev</a>
                )}
                {Array.from({ length: totalPages }).map((_, i) => {
                  const n = i + 1;
                  const active = n === page;
                  return (
                    <a
                      href={pageHref(n)}
                      aria-current={active ? 'page' : undefined}
                      style={`padding:.4rem .7rem; border:1px solid var(--border, rgba(0,0,0,.08)); border-radius:8px; text-decoration:none; ${active ? 'background: var(--surface-2, rgba(0,0,0,.06)); font-weight:600;' : ''}`}
                    >
                      {n}
                    </a>
                  );
                })}
                {page < totalPages && (
                  <a href={pageHref(page + 1)} style="padding:.4rem .7rem; border:1px solid var(--border, rgba(0,0,0,.08)); border-radius:8px; text-decoration:none;">Next</a>
                )}
              </nav>
            )}
          </div>
        </div>
      </nav>
    </div>

    <style></style>

    <!--[if lte IE 9]><script src="//cdnjs.cloudflare.com/ajax/libs/placeholders/3.0.2/placeholders.min.js"></script><![endif]-->
  </body>
</html>
