---
import SiteLayout from '../../layouts/SiteLayout.astro';
import BackNav from "../../components/BackNav.astro";
import PostCard from "../../components/PostCard.astro";
import Pagination from "../../components/Pagination.astro";
import { loadAllPosts, slicePage } from '../../lib/blog';
import { collectionPageJsonLd } from '../../lib/seo';

const posts = await loadAllPosts();

const pageSize = 10;
const page = 1;
const totalPages = Math.max(1, Math.ceil(posts.length / pageSize));
const paginated = slicePage(posts, page, pageSize);
const pageHref = (n: number) => (n === 1 ? `/blog/` : `/blog/page/${n}/`);

const normalizeHero = (hero: any) => {
  if (!hero) return null;
  if (typeof hero === 'string') {
    return { src: hero, width: 512, height: 512 };
  }
  const { src, width, height } = hero;
  return { src, width, height };
};

const getHero = (post: any) => normalizeHero(post.data?.hero ?? post.hero);
const getExcerpt = (post: any) => post.data?.excerpt ?? post.data?.description ?? '';
const getCategory = (post: any) => post.data?.category ?? null;
---

<SiteLayout
  title="Blog"
  canonical="/blog/"
  description="Halaman blog pribadi milik Erland Ramdhani. Berisi berbagai artikel yang ditulis untuk menyalurkan hobi walau tak tentu waktu publikasi."
  nextHref={totalPages > 1 ? pageHref(2) : undefined}
  jsonLd={collectionPageJsonLd(
    'Blog',
    '/blog/',
    paginated.map((p, i) => ({ url: `/blog/${p.slug}/`, name: p.data.title, position: i + 1 }))
  )}
  selectedItem="blog"
>
  <BackNav href="/" label="Back" />

  <div class="content-container">
    <h1>Blog</h1>
    <section class="items-container">
      <div class="resouce-items">
        {paginated.map((post) => {
          const hero = getHero(post);
          const excerpt = getExcerpt(post);
          const dateLabel = post.date
            ? post.date.toLocaleDateString('id-ID', { dateStyle: 'medium' })
            : null;
          return (
            <PostCard
              href={`/blog/${post.slug}/`}
              title={post.data.title}
              hero={hero}
              alt={post.data.heroAlt ?? post.data.title}
              category={getCategory(post)}
              dateLabel={dateLabel}
              excerpt={excerpt}
            />
          );
        })}

        {posts.length === 0 && (
          <p style="opacity:.8;">There are no articles to read yet</p>
        )}
      </div>
    </section>
    {posts.length > pageSize && (
      <Pagination page={page} totalPages={totalPages} pageHref={pageHref} />
    )}
  </div>
</SiteLayout>
