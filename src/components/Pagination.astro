---
interface Props {
  page: number;
  totalPages: number;
  pageHref: (n: number) => string;
}

const { page, totalPages, pageHref } = Astro.props as Props;
---

<nav aria-label="Pagination" style="display:flex; gap:.5rem; align-items:center; justify-content:center; margin-top:1rem;">
  {page > 1 && (
    <a href={pageHref(page - 1)} style="padding:.4rem .7rem; border:1px solid var(--border, rgba(0,0,0,.08)); border-radius:8px; text-decoration:none;">Prev</a>
  )}
  {Array.from({ length: totalPages }).map((_, i) => {
    const n = i + 1;
    const active = n === page;
    return (
      <a
        href={pageHref(n)}
        aria-current={active ? 'page' : undefined}
        style={`padding:.4rem .7rem; border:1px solid var(--border, rgba(0,0,0,.08)); border-radius:8px; text-decoration:none; ${active ? 'background: var(--surface-2, rgba(0,0,0,.06)); font-weight:600;' : ''}`}
      >
        {n}
      </a>
    );
  })}
  {page < totalPages && (
    <a href={pageHref(page + 1)} style="padding:.4rem .7rem; border:1px solid var(--border, rgba(0,0,0,.08)); border-radius:8px; text-decoration:none;">Next</a>
  )}
</nav>

