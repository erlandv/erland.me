---
const { selectedItem } = Astro.props;
import Icon from "./Icon.astro";

const socials: Array<{ name: string; href: string; label: string }> = [
  { name: "x", href: "https://x.com/erlandzz", label: "X" },
  { name: "instagram", href: "https://www.instagram.com/erlandramdhani", label: "Instagram" },
  { name: "facebook", href: "https://www.facebook.com/erlandramdhani", label: "Facebook" },
  { name: "github", href: "https://github.com/erlandv", label: "GitHub" },
  { name: "bluesky", href: "https://bsky.app/profile/erland.me", label: "Bluesky" },
];
---

<aside
  data-animation="default"
  data-collapse="medium"
  data-duration="400"
  data-easing="ease"
  data-easing2="ease"
  data-astro-transition-persist="sidebar"
  role="banner"
  class="sidebar w-nav"
>
  <div class="nav-content">
    <a href="/" class="w-nav-brand" aria-label="home">
      <div class="niv-data">
        <img
          src="/assets/erland.webp"
          loading="eager"
          alt="Profile picture"
          class="niv-image"
        />
        <div class="profile-text">
          <div class="label-white">Erland Ramdhani</div>
          <div class="label-gray">Web Developer</div>
        </div>
      </div>
    </a>

    <!-- Hidden checkbox to drive CSS-only toggle -->
    <input type="checkbox" id="nav-toggle" class="nav-toggle" aria-label="Toggle navigation" />
    
    <!-- Hidden checkbox for sidebar expand/collapse (desktop only) -->
    <input type="checkbox" id="sidebar-toggle" class="sidebar-toggle" aria-label="Toggle sidebar" />

    <nav id="site-nav" role="navigation" class="w-nav-menu">
      <a
        href="/"
        class={`nav-link-container w-inline-block ${
          selectedItem === "home" ? "w--current" : ""
        }`}
      >
        <Icon name="home" class="nav-link-image" />
        <div class="nav-text">Home</div>
      </a>
      <a
        href="/portfolio/web-development/"
        class={`nav-link-container w-inline-block ${
          selectedItem === "web-development" ? "w--current" : ""
        }`}
        aria-current={selectedItem === "web-development"
          ? "page"
          : undefined}
      >
        <Icon name="code" class="nav-link-image" />
        <div class="nav-text">Web development</div>
      </a>
      <a
        href="/portfolio/cloud-infra/"
        class={`nav-link-container w-inline-block ${
          selectedItem === "cloud-infra" ? "w--current" : ""
        }`}
      >
        <Icon name="dns" class="nav-link-image" />
        <div class="nav-text">Cloud Infra</div>
      </a>
      <a
        href="/portfolio/personal-projects/"
        class={`nav-link-container w-inline-block ${
          selectedItem === "personal-projects" ? "w--current" : ""
        }`}
      >
        <Icon name="favorite" class="nav-link-image" />
        <div class="nav-text">Personal projects</div>
      </a>
      <a
        href="/download/"
        class={`nav-link-container w-inline-block ${
          selectedItem === "download" ? "w--current" : ""
        }`}
        aria-current={selectedItem === "download" ? "page" : undefined}
      >
        <Icon name="download" class="nav-link-image" />
        <div class="nav-text">Download</div>
      </a>
      <a
        href="/blog/"
        class={`nav-link-container w-inline-block ${
          selectedItem === "blog" ? "w--current" : ""
        }`}
      >
        <Icon name="blog" class="nav-link-image" />
        <div class="nav-text">Blog</div>
      </a>
      <!-- Sidebar toggle as a nav item (desktop only). Acts as a label for the hidden checkbox. -->
      <label
        for="sidebar-toggle"
        class="nav-link-container sidebar-toggle-button w-inline-block"
        aria-label="Toggle sidebar width"
        tabindex="0"
      >
        <Icon name="sidebar" class="nav-link-image" />
        <div class="nav-text">Expand/Collapse</div>
      </label>
      <div class="socials socials--menu">
        {socials.map((s) => (
          <a href={s.href} aria-label={s.label} class="social-link" target="_blank" rel="noopener noreferrer">
            <Icon name={s.name} class="social-icon" ariaLabel={s.label} />
          </a>
        ))}
      </div>
    </nav>

    <div class="socials socials--sidebar">
      {socials.map((s) => (
        <a href={s.href} aria-label={s.label} class="social-link" target="_blank" rel="noopener noreferrer">
          <Icon name={s.name} class="social-icon" ariaLabel={s.label} />
        </a>
      ))}
    </div>

    <label
      for="nav-toggle"
      class="navbar-icon-button w-nav-button"
      style="-webkit-user-select: text;"
      aria-label="Toggle menu"
      aria-controls="site-nav"
      tabindex="0"
    >
      <span class="icon-switch icon-switch--menu"><Icon name="menu" class="navbar-icon" /></span>
      <span class="icon-switch icon-switch--close"><Icon name="close" class="navbar-icon" /></span>
    </label>
  </div>

  <style>
    /* Hide the checkbox drivers */
    .nav-toggle,
    .sidebar-toggle {
      position: absolute;
      width: 1px;
      height: 1px;
      overflow: hidden;
      clip: rect(0 0 0 0);
      white-space: nowrap;
      clip-path: inset(50%);
      border: 0;
      padding: 0;
      margin: -1px;
    }

    /* Icon animations and alignment: both icons overlap exactly */
    /* Default: hide the toggle; show it only on mobile in media query below */
    .navbar-icon-button {
      position: relative;
      width: 44px;
      height: 44px;
      display: none;
      align-items: center;
      justify-content: center;
    }
    .navbar-icon {
      width: 26px;
      height: 26px;
      display: block;
    }
    .icon-switch {
      position: absolute;
      top: 50%;
      left: 50%;
      /* base placement and animated transform via variable */
      --icon-xform: rotate(0deg) scale(1);
      transform: translate(-50%, -50%) var(--icon-xform);
      transform-origin: center;
      transition: opacity 200ms ease, transform 200ms ease;
    }
    /* initial states */
    .icon-switch--menu { opacity: 1; --icon-xform: rotate(0deg) scale(1); }
    .icon-switch--close { opacity: 0; --icon-xform: rotate(-90deg) scale(0.9); }

    /* Sidebar toggle is now styled as a nav-link item */
    .sidebar-toggle-button { cursor: pointer; }
    .sidebar-toggle-button:hover .sidebar-toggle-icon { opacity: 1; }

    /* Mobile-only menu toggle behavior */
    @media (max-width: 1024px) {
      /* Ensure mobile overlay anchors to the viewport, not the sidebar
         Fix: remove transforms/contain that create a containing block for position: fixed */
      .sidebar {
        transform: none !important;
        -webkit-transform: none !important;
        will-change: auto !important;
        contain: none !important;
      }

      /* On mobile, ignore desktop collapsed width/padding */
      html.sidebar-collapsed-global .sidebar,
      html[data-sidebar="collapsed"] .sidebar,
      body.sidebar-collapsed .sidebar {
        width: 100% !important;
        padding: 24px !important;
      }
      /* Hide sidebar toggle button on mobile regardless of collapsed state */
      .sidebar-toggle-button,
      .sidebar:has(#sidebar-toggle:checked) .sidebar-toggle-button,
      html.sidebar-collapsed-global .sidebar .sidebar-toggle-button,
      html[data-sidebar="collapsed"] .sidebar .sidebar-toggle-button,
      body.sidebar-collapsed .sidebar .sidebar-toggle-button {
        display: none !important;
      }
      
      /* Ensure header (brand) and toggle stay above the overlay */
      .w-nav-brand { position: relative; z-index: 1301; }
      .navbar-icon-button { position: relative; z-index: 1301; display: inline-flex; }
      /* Mobile overlay panel: present in DOM, hidden by opacity/visibility/transform */
      .sidebar .w-nav-menu {
        display: flex !important; /* override global collapse */
        flex-direction: column;
        align-items: stretch;
        position: fixed;
        left: 0;
        right: 0;
        top: 0; /* start at very top to avoid visible gap */
        bottom: 0;
        /* Fill full viewport and scroll internally */
        height: 100vh;
        height: 100dvh;
        overflow-y: auto;
        -webkit-overflow-scrolling: touch;
        /* Reserve space for the header area so menu items start below it */
        padding-top: 92px;
        padding-bottom: 8px;
        background-color: #1c1c1c;
        /* Ensure overlay sits above main content but below brand/toggle */
        z-index: 1200;
        /* Hidden state */
        opacity: 0;
        transform: translateY(-10px);
        visibility: hidden;
        pointer-events: none;
        transition: opacity 220ms ease, transform 220ms ease, visibility 0s linear 220ms;
        will-change: transform, opacity;
      }
      /* Open state */
      .nav-toggle:checked ~ .w-nav-menu {
        opacity: 1;
        transform: translateY(0);
        visibility: visible;
        pointer-events: auto;
        transition: opacity 220ms ease, transform 220ms ease;
      }
      /* When mobile menu is open, override any collapsed-state text hiding */
      .nav-toggle:checked ~ .w-nav-menu .nav-text,
      .nav-toggle:checked ~ .w-nav-menu .profile-text {
        opacity: 1 !important;
        max-width: 100% !important;
        pointer-events: auto !important;
      }
      /* Mobile menu items should be full width */
      .nav-toggle:checked ~ .w-nav-menu .nav-link-container {
        width: auto !important;
        justify-content: flex-start !important;
        align-items: center !important;
        gap: 12px !important;
        padding: 12px 28px 12px 32px !important;
        margin-left: 0 !important;
        margin-right: 0 !important;
      }
      /* Ensure social icons appear inside the mobile menu */
      .nav-toggle:checked ~ .w-nav-menu .socials--menu {
        display: flex !important;
        position: static;
        justify-content: flex-start;
        gap: 18px;
        padding: 12px 28px 12px 32px;
        border-top: 1px solid #353535;
        margin-top: auto;
        background-color: #1c1c1c;
      }
      /* Swap icons with animation (preserve centering via CSS var) */
      .nav-toggle:checked ~ .navbar-icon-button .icon-switch--menu {
        opacity: 0;
        --icon-xform: rotate(90deg) scale(0.9);
      }
      .nav-toggle:checked ~ .navbar-icon-button .icon-switch--close {
        opacity: 1;
        --icon-xform: rotate(0deg) scale(1);
      }
    }
  </style>

  <script is:inline>
    (function() {
      function initAll() {
        if (window.sidebarState && typeof window.sidebarState.init === 'function') {
          window.sidebarState.init();
        }
      }
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initAll);
      } else {
        initAll();
      }
      window.addEventListener('astro:page-load', initAll);
      window.addEventListener('astro:after-swap', initAll);
    })();
  </script>
</aside>

<style is:global>
  /* Prevent body from scrolling when the mobile menu is open (modern browsers) */
  body:has(.sidebar .nav-toggle:checked) {
    overflow: hidden;
    touch-action: none;
  }


  /* Smooth collapsed/expanded transitions */
  .sidebar {
    transition: width 300ms ease, padding 300ms ease;
    overflow-x: clip;
  }

  /* Also honor root-level collapsed flags so state applies before component init */
  html.sidebar-collapsed-global .sidebar,
  html[data-sidebar="collapsed"] .sidebar,
  body.sidebar-collapsed .sidebar {
    width: 80px;
    padding: 20px 8px;
  }

  .sidebar .nav-link-container {
    box-sizing: border-box;
    transition: width 220ms ease, padding 220ms ease, margin 220ms ease, background-color 180ms ease, border-color 180ms ease, transform 180ms ease;
  }

  .sidebar .profile-text,
  .sidebar .nav-text {
    opacity: 1;
    max-width: 220px;
    inline-size: auto;
    white-space: nowrap;
    overflow: hidden;
    transition: opacity 200ms ease, max-width 220ms ease;
    will-change: opacity, max-width;
  }

  html.sidebar-collapsed-global .sidebar .profile-text,
  html[data-sidebar="collapsed"] .sidebar .profile-text,
  body.sidebar-collapsed .sidebar .profile-text,
  html.sidebar-collapsed-global .sidebar .nav-text,
  html[data-sidebar="collapsed"] .sidebar .nav-text,
  body.sidebar-collapsed .sidebar .nav-text {
    opacity: 0;
    max-width: 0;
  }

  .sidebar .socials--sidebar,
  .sidebar .socials--menu {
    opacity: 1;
    max-height: 200px;
    transition: opacity 220ms ease, max-height 240ms ease, padding-top 240ms ease, border-color 240ms ease;
    will-change: opacity, max-height;
    overflow: hidden;
  }

  html.sidebar-collapsed-global .sidebar .socials--sidebar,
  html[data-sidebar="collapsed"] .sidebar .socials--sidebar,
  body.sidebar-collapsed .sidebar .socials--sidebar,
  html.sidebar-collapsed-global .sidebar .socials--menu,
  html[data-sidebar="collapsed"] .sidebar .socials--menu,
  body.sidebar-collapsed .sidebar .socials--menu {
    opacity: 0;
    max-height: 0;
    padding-top: 0;
    border-top-color: transparent;
  }

  /* Orchestrated step: hide text first during animation */
  .sidebar.sidebar-animating.hiding-text .profile-text,
  .sidebar.sidebar-animating.hiding-text .nav-text {
    opacity: 0;
    max-width: 0;
  }
  .sidebar.sidebar-animating.hiding-text .socials--sidebar,
  .sidebar.sidebar-animating.hiding-text .socials--menu {
    opacity: 0;
    max-height: 0;
    padding-top: 0;
    border-top-color: transparent;
  }

  /* Collapsed state: slider-like fold */
  .sidebar.sidebar-collapsed {
    width: 80px;
    /* Match expanded vertical padding for consistent vertical positions */
    padding: 32px 8px;
  }

  /* Pure-CSS fallback: collapse when the hidden checkbox is checked */
  .sidebar:has(#sidebar-toggle:checked) {
    width: 80px;
    padding: 32px 8px;
  }

  .sidebar.sidebar-collapsed .profile-text,
  .sidebar.sidebar-collapsed .nav-text {
    opacity: 0;
    max-width: 0;
  }

  .sidebar:has(#sidebar-toggle:checked) .profile-text,
  .sidebar:has(#sidebar-toggle:checked) .nav-text {
    opacity: 0;
    max-width: 0;
  }

  /* Preserve vertical layout when collapsed: keep a spacer where socials would be */
  .sidebar.sidebar-collapsed .socials--sidebar {
    opacity: 0;
    visibility: hidden;
    pointer-events: none;
    margin-top: auto !important;
    border-top-color: transparent;
    padding-top: 0;
    /* Reserve space equal to expanded socials area: border (1) + padding-top (12) + row (22 icon + 16 vertical padding) = 51px */
    min-height: 51px;
  }
  .sidebar.sidebar-collapsed .socials--menu {
    opacity: 0;
    max-height: 0;
    padding-top: 0;
    border-top-color: transparent;
  }

  .sidebar:has(#sidebar-toggle:checked) .socials--sidebar {
    opacity: 0;
    visibility: hidden;
    pointer-events: none;
    margin-top: auto !important;
    border-top-color: transparent;
    padding-top: 0;
    min-height: 51px;
  }
  .sidebar:has(#sidebar-toggle:checked) .socials--menu {
    opacity: 0;
    max-height: 0;
    padding-top: 0;
    border-top-color: transparent;
  }

  /* Alignment adjustments during collapse */
  html.sidebar-collapsed-global .sidebar .w-nav-brand,
  html[data-sidebar="collapsed"] .sidebar .w-nav-brand,
  body.sidebar-collapsed .sidebar .w-nav-brand {
    justify-content: center !important;
    margin-bottom: 20px !important;
  }
  .sidebar.sidebar-collapsed .w-nav-brand {
    justify-content: center !important;
    margin-bottom: 20px !important;
  }

  .sidebar:has(#sidebar-toggle:checked) .w-nav-brand {
    justify-content: center !important;
    margin-bottom: 20px !important;
  }
  .sidebar.sidebar-collapsed .niv-data {
    justify-content: center !important;
    align-items: center !important;
  }

  .sidebar:has(#sidebar-toggle:checked) .niv-data {
    justify-content: center !important;
    align-items: center !important;
  }
  .sidebar.sidebar-collapsed .niv-image {
    margin-right: 0 !important;
    margin: 0 auto !important;
  }

  .sidebar:has(#sidebar-toggle:checked) .niv-image {
    margin-right: 0 !important;
    margin: 0 auto !important;
  }
  html.sidebar-collapsed-global .sidebar .nav-link-container,
  html[data-sidebar="collapsed"] .sidebar .nav-link-container,
  body.sidebar-collapsed .sidebar .nav-link-container,
  .sidebar.sidebar-collapsed .nav-link-container {
    justify-content: center !important;
    align-items: center !important;
    padding: 10px 6px !important;
    margin-bottom: 8px !important;
    min-height: 44px !important;
    width: 60px !important;
    margin-left: auto !important;
    margin-right: auto !important;
    gap: 0 !important;
    transition: width 220ms ease, padding 220ms ease, margin 220ms ease, gap 220ms ease;
  }

  .sidebar:has(#sidebar-toggle:checked) .nav-link-container {
    justify-content: center !important;
    align-items: center !important;
    padding: 10px 6px !important;
    margin-bottom: 8px !important;
    min-height: 44px !important;
    width: 60px !important;
    margin-left: auto !important;
    margin-right: auto !important;
    gap: 0 !important;
    transition: width 220ms ease, padding 220ms ease, margin 220ms ease, gap 220ms ease;
  }
  .sidebar.sidebar-collapsed .nav-link-image { margin: 0 auto !important; }
  .sidebar.sidebar-collapsed .nav-text { pointer-events: none; }
  .sidebar.sidebar-collapsed .w-nav-menu { align-items: center !important; }

  .sidebar:has(#sidebar-toggle:checked) .nav-link-image { margin: 0 auto !important; }
  .sidebar:has(#sidebar-toggle:checked) .nav-text { pointer-events: none; }
  .sidebar:has(#sidebar-toggle:checked) .w-nav-menu { align-items: center !important; }

  /* Toggle button sizing in collapsed view uses nav-link defaults; no extra overrides needed */

  .sidebar:has(#sidebar-toggle:checked) .sidebar-toggle-button {
    display: inline-flex !important;
    width: 60px !important;
    height: 44px !important;
    margin-left: auto !important;
    margin-right: auto !important;
    justify-content: center !important;
    align-items: center !important;
    padding: 0 !important;
    margin-bottom: 8px !important;
    border-radius: 8px !important;
    /* Let base/hover styles inherit from .nav-link-container */
  }
  /* Collapse hover size: match nav menu icon */
  .sidebar.sidebar-collapsed .sidebar-toggle-button .nav-link-image { opacity: 0.48; }
  .sidebar.sidebar-collapsed .sidebar-toggle-button:hover .nav-link-image { opacity: 1; }

  /* Collapsed hover appearance: match nav-link hover */
  /* Hover styles inherited from .nav-link-container */

  /* Active state for toggle when collapsed: mimic nav-link active */
  /* Base styles inherit from .nav-link-container; no overrides here to keep hover identical */
  /* Visually mark toggle as active when sidebar is collapsed */
  .sidebar.sidebar-collapsed .sidebar-toggle-button.is-active,
  .sidebar:has(#sidebar-toggle:checked) .sidebar-toggle-button.is-active {
    background-color: #2b2b2b;
    border-color: #353535;
  }
  /* Hover on active toggle: same as nav-link active + hover */
  .sidebar.sidebar-collapsed .sidebar-toggle-button.is-active:hover,
  .sidebar:has(#sidebar-toggle:checked) .sidebar-toggle-button.is-active:hover {
    background-color: #252525;
    border-color: #353535;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
  }

</style>
