name: Deploy Astro (Remote Build)
on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: deploy-erland-me
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup SSH key
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$DEPLOY_KEY" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key

      - name: Add server to known_hosts
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_PORT: ${{ secrets.SERVER_PORT }}
        run: |
          ssh-keyscan -p "$SERVER_PORT" "$SERVER_HOST" >> ~/.ssh/known_hosts || true

      - name: Remote deploy (git pull, build)
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_PORT: ${{ secrets.SERVER_PORT }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_PATH: ${{ secrets.SERVER_PATH }}
        run: |
          ssh -i ~/.ssh/deploy_key -p "$SERVER_PORT" "$SERVER_USER@$SERVER_HOST" bash -lc "
            set -euo pipefail
            cd \"$SERVER_PATH\"
            # Ensure repo exists
            git rev-parse --is-inside-work-tree >/dev/null 2>&1 || exit 1
            # Update to latest main
            git fetch --all
            if git show-ref --verify --quiet refs/remotes/origin/main; then
              git reset --hard origin/main
            else
              git pull origin main --rebase
            fi
            # Build with production env on server
            export NODE_ENV=production
            export IMAGE_SERVICE=passthrough
            npm ci
            npm run build
          "